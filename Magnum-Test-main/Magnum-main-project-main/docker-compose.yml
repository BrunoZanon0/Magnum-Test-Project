# version: '3.9'

services:
  api-1:
    build:
      context: ./api-1
    container_name: api-1
    volumes:
      - ./api-1:/var/www/api-1
    environment:
      DB_HOST: postgres
      DB_NAME: fipe
      DB_USER: user
      DB_PASS: secret
      REDIS_HOST: redis
      RABBITMQ_HOST: rabbitmq
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  api-2:
    build:
      context: ./api-2
    container_name: api-2
    volumes:
      - ./api-2/src:/app
    networks:
      - app-network
    command: ["php", "consumer.php"]

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./api-1:/var/www/api-1
    depends_on:
      - api-1
    networks:
      - app-network

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: fipe
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres/init-scripts:/docker-entrypoint-initdb.d 
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d fipe"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
    driver: local